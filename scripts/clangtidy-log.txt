Skipping /home/aref/projects/SGX-DDL/trusted/include/CryptoEngine.hpp. Compile command not found.
12 warnings generated.
Skipping /home/aref/projects/SGX-DDL/trusted/src/DNNDataIO.cpp. Compile command not found.
2677 warnings generated.
5818 warnings generated.
8477 warnings generated.
Skipping /home/aref/projects/SGX-DDL/trusted/src/DNNParamIO.cpp. Compile command not found.
Skipping /home/aref/projects/SGX-DDL/cmake-build-debug/CMakeFiles/feature_tests.c. Compile command not found.
Skipping /home/aref/projects/SGX-DDL/untrusted/include/CryptoEngine.hpp. Compile command not found.
8511 warnings generated.
14068 warnings generated.
/home/aref/projects/SGX-DDL/trusted/enclave_t.c:35:18: warning: statement should be inside braces [readability-braces-around-statements]
        if (pms != NULL) return SGX_ERROR_INVALID_PARAMETER;
                        ^
                         {
/home/aref/projects/SGX-DDL/trusted/enclave_t.c:100:3: warning: Value stored to '__tmp' is never read [clang-analyzer-deadcode.DeadStores]
                __tmp = (void *)((size_t)__tmp + _len_config);
                ^
/home/aref/projects/SGX-DDL/trusted/enclave_t.c:100:3: note: Value stored to '__tmp' is never read
/home/aref/projects/SGX-DDL/trusted/enclave_t.c:112:14: warning: statement should be inside braces [readability-braces-around-statements]
                if (config) memcpy((void*)config, __tmp_config, _len_config);
                           ^
                            {
/home/aref/projects/SGX-DDL/trusted/enclave_t.c:140:3: warning: Value stored to '__tmp' is never read [clang-analyzer-deadcode.DeadStores]
                __tmp = (void *)((size_t)__tmp + _len_str);
                ^
/home/aref/projects/SGX-DDL/trusted/enclave_t.c:140:3: note: Value stored to '__tmp' is never read
/opt/intel/sgx-2.2/sgxsdk/include/sgx_defs.h:42:55: warning: macro replacement list should be enclosed in parentheses [misc-macro-parentheses]
# define SGX_CXX_NATIVE_HEADER(header)   <stdc++/linux/header>
                                         ~            ^
                                         (                    )
/opt/intel/sgx-2.2/sgxsdk/include/sgx_defs.h:42:56: warning: macro argument should be enclosed in parentheses [misc-macro-parentheses]
# define SGX_CXX_NATIVE_HEADER(header)   <stdc++/linux/header>
                                                       ^~~~~~~
                                                       ()
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:90:31: warning: parameter 'eid' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ecall(const sgx_enclave_id_t eid,
                              ^~~~~~~~~~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:91:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                              const int index,
                              ^~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:94:42: warning: parameter 'eid' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ecall_switchless(const sgx_enclave_id_t eid,
                                         ^~~~~~~~~~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:95:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                              const int index,
                              ^~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:106:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ocall(const unsigned int index,
                              ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:108:42: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ocall_switchless(const unsigned int index,
                                         ^~~~~~~~~~~~~~~
/home/aref/projects/SGX-DDL/trusted/enclave_t.h:4:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/home/aref/projects/SGX-DDL/trusted/enclave_t.h:5:10: warning: inclusion of deprecated C++ header 'wchar.h'; consider using 'cwchar' instead [modernize-deprecated-headers]
#include <wchar.h>
         ^~~~~~~~~
         <cwchar>
/home/aref/projects/SGX-DDL/trusted/enclave_t.h:6:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>
         ^~~~~~~~~~
         <cstddef>
/home/aref/projects/SGX-DDL/trusted/enclave_t.h:10:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h> /* for size_t */
         ^~~~~~~~~~
         <cstdlib>
/home/aref/projects/SGX-DDL/trusted/include/DNNConfigIO.h:23:52: warning: parameter 'write_handler' is unused [misc-unused-parameters]
  sendToUntrusted(const std::function<void(void)> &write_handler) override {
                                                   ^~~~~~~~~~~~~~
                                                    /*write_handler*/
/home/aref/projects/SGX-DDL/trusted/src/enclave-app.cpp:14:6: warning: do not define a C-style variadic function; consider using a function parameter pack or currying instead [cert-dcl50-cpp]
void printf(const char *fmt, ...) {
     ^
/home/aref/projects/SGX-DDL/trusted/src/enclave-app.cpp:18:3: warning: Function 'vsnprintf' is called with an uninitialized va_list argument [clang-analyzer-valist.Uninitialized]
  vsnprintf(buf, BUFSIZ, fmt, ap);
  ^
/home/aref/projects/SGX-DDL/trusted/src/enclave-app.cpp:18:3: note: Function 'vsnprintf' is called with an uninitialized va_list argument
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cassert:21:10: warning: inclusion of deprecated C++ header 'assert.h'; consider using 'cassert' instead [modernize-deprecated-headers]
#include <assert.h>
         ^~~~~~~~~~
         <cassert>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cctype:39:10: warning: inclusion of deprecated C++ header 'ctype.h'; consider using 'cctype' instead [modernize-deprecated-headers]
#include <ctype.h>
         ^~~~~~~~~
         <cctype>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/climits:42:10: warning: inclusion of deprecated C++ header 'limits.h'; consider using 'climits' instead [modernize-deprecated-headers]
#include <limits.h>
         ^~~~~~~~~~
         <climits>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cstdarg:36:10: warning: inclusion of deprecated C++ header 'stdarg.h'; consider using 'cstdarg' instead [modernize-deprecated-headers]
#include <stdarg.h>
         ^~~~~~~~~~
         <cstdarg>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cstddef:38:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>
         ^~~~~~~~~~
         <cstddef>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cstdint:145:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cstdio:100:10: warning: inclusion of deprecated C++ header 'stdio.h'; consider using 'cstdio' instead [modernize-deprecated-headers]
#include <stdio.h>
         ^~~~~~~~~
         <cstdio>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cstdlib:86:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cstring:61:10: warning: inclusion of deprecated C++ header 'string.h'; consider using 'cstring' instead [modernize-deprecated-headers]
#include <string.h>
         ^~~~~~~~~~
         <cstring>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cwchar:108:10: warning: inclusion of deprecated C++ header 'wchar.h'; consider using 'cwchar' instead [modernize-deprecated-headers]
#include <wchar.h>
         ^~~~~~~~~
         <cwchar>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cwctype:55:10: warning: inclusion of deprecated C++ header 'wctype.h'; consider using 'cwctype' instead [modernize-deprecated-headers]
#include <wctype.h>
         ^~~~~~~~~~
         <cwctype>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/iosfwd:90:10: warning: inclusion of deprecated C++ header 'wchar.h'; consider using 'cwchar' instead [modernize-deprecated-headers]
#include <wchar.h>  // for mbstate_t
         ^~~~~~~~~
         <cwchar>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/new:170:1: warning: modification of 'std' namespace can result in undefined behavior [cert-dcl58-cpp]
_LIBCPP_BEGIN_NAMESPACE_STD
^
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/__config:441:47: note: expanded from macro '_LIBCPP_BEGIN_NAMESPACE_STD'
#define _LIBCPP_BEGIN_NAMESPACE_STD namespace std {inline namespace _LIBCPP_NAMESPACE {
                                              ^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_attributes.h:35:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_attributes.h:53:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _attributes_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_attributes.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint32_t    sgx_misc_select_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_misc_select_t = uint32_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_attributes.h:62:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_misc_attribute_t {
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_defs.h:42:55: warning: macro replacement list should be enclosed in parentheses [misc-macro-parentheses]
# define SGX_CXX_NATIVE_HEADER(header)   <stdc++/linux/header>
                                         ~            ^
                                         (                    )
/opt/intel/sgx-2.2/sgxsdk/include/sgx_defs.h:42:56: warning: macro argument should be enclosed in parentheses [misc-macro-parentheses]
# define SGX_CXX_NATIVE_HEADER(header)   <stdc++/linux/header>
                                                       ^~~~~~~
                                                       ()
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:49:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>         /* for size_t */
         ^~~~~~~~~~
         <cstddef>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:90:31: warning: parameter 'eid' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ecall(const sgx_enclave_id_t eid,
                              ^~~~~~~~~~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:91:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                              const int index,
                              ^~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:94:42: warning: parameter 'eid' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ecall_switchless(const sgx_enclave_id_t eid,
                                         ^~~~~~~~~~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:95:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                              const int index,
                              ^~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:106:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ocall(const unsigned int index,
                              ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:108:42: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ocall_switchless(const unsigned int index,
                                         ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_eid.h:35:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_eid.h:37:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint64_t sgx_enclave_id_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_enclave_id_t = uint64_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_error.h:37:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef enum _status_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:42:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:59:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t                    sgx_key_128bit_t[16];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint16_t                   sgx_isv_svn_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_isv_svn_t = uint16_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:62:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_cpu_svn_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:67:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_key_id_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:74:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _key_request_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:49:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_measurement_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:54:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t             sgx_mac_t[SGX_MAC_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:56:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_report_data_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:61:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint16_t            sgx_prod_id_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_prod_id_t = uint16_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:66:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _target_info_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:75:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _report_body_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:91:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _report_t                    /* 432 bytes */
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_spinlock.h:40:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_spinlock.h:42:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef volatile uint32_t sgx_spinlock_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_spinlock_t = volatile uint32_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:45:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include "stdlib.h"
         ^~~~~~~~~~
         <cstdlib>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_ec256_dh_shared_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:65:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_ec256_private_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:70:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_ec256_public_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:76:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_ec256_signature_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:82:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_rsa3072_public_key_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:88:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_rsa3072_key_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:95:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_rsa3072_signature_t[SGX_RSA3072_KEY_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:97:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef void* sgx_sha_state_handle_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_sha_state_handle_t = void *
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:98:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef void* sgx_cmac_state_handle_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_cmac_state_handle_t = void *
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:99:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef void* sgx_ecc_state_handle_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_ecc_state_handle_t = void *
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:101:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_sha256_hash_t[SGX_SHA256_HASH_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:103:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_aes_gcm_128bit_key_t[SGX_AESGCM_KEY_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:104:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_aes_gcm_128bit_tag_t[SGX_AESGCM_MAC_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:105:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_cmac_128bit_key_t[SGX_CMAC_KEY_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:106:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_cmac_128bit_tag_t[SGX_CMAC_MAC_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:107:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_aes_ctr_128bit_key_t[SGX_AESCTR_KEY_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:109:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef enum {
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:136:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef enum {
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:142:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef enum {
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:166:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _rsa_params_t {
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:432:25: warning: parameter 'src_len' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                        const uint32_t src_len,
                        ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:434:25: warning: parameter 'ctr_inc_bits' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                        const uint32_t ctr_inc_bits,
                        ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:440:25: warning: parameter 'src_len' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                        const uint32_t src_len,
                        ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:442:25: warning: parameter 'ctr_inc_bits' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                        const uint32_t ctr_inc_bits,
                        ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:525:37: warning: parameter 'ecc_handle' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                                    const sgx_ecc_state_handle_t ecc_handle,
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:525:66: warning: 'ecc_handle' declared with a const-qualified typedef type; results in the type being 'void *const' instead of 'const void *' [misc-misplaced-const]
                                    const sgx_ecc_state_handle_t ecc_handle,
                                                                 ^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:99:15: note: typedef declared here
typedef void* sgx_ecc_state_handle_t;
              ^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:719:136: warning: parameter 'pin_len' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
    sgx_status_t sgx_rsa_priv_decrypt_sha256(void* rsa_key, unsigned char* pout_data, size_t* pout_len, const unsigned char* pin_data, const size_t pin_len);
                                                                                                                                       ^~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:732:135: warning: parameter 'pin_len' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
    sgx_status_t sgx_rsa_pub_encrypt_sha256(void* rsa_key, unsigned char* pout_data, size_t* pout_len, const unsigned char* pin_data, const size_t pin_len);
                                                                                                                                      ^~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:31:11: warning: modification of 'std' namespace can result in undefined behavior [cert-dcl58-cpp]
namespace std
          ^
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:36:15: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                exception() throw();
                            ^~~~~~~~
                            noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:37:31: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                exception(const exception&) throw();
                                            ^~~~~~~~
                                            noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:38:42: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                exception& operator=(const exception&) throw();
                                                       ^~~~~~~~
                                                       noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:40:36: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                virtual const char* what() const throw();
                                                 ^~~~~~~~
                                                 noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:49:15: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_alloc() throw();
                            ^~~~~~~~
                            noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:50:31: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_alloc(const bad_alloc&) throw();
                                            ^~~~~~~~
                                            noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:51:42: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_alloc& operator=(const bad_alloc&) throw();
                                                       ^~~~~~~~
                                                       noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:52:3: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
                ~bad_alloc();
                ^           ~
                             override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:53:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
                virtual const char* what() const throw();
                ~~~~~~~~~~~~~~      ^                   ~
                                                         override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:53:36: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                virtual const char* what() const throw();
                                                 ^~~~~~~~
                                                 noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:59:25: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
        bad_exception() throw();
                        ^~~~~~~~
                        noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:60:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
        virtual ~bad_exception() throw();
        ~~~~~~~~^                       ~
                                         override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:60:34: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
        virtual ~bad_exception() throw();
                                 ^~~~~~~~
                                 noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:61:29: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
        virtual const char* what() const throw();
        ~~~~~~~~~~~~~~      ^                   ~
                                                 override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:61:42: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
        virtual const char* what() const throw();
                                         ^~~~~~~~
                                         noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:64:31: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
    bool uncaught_exception() throw();
                              ^~~~~~~~
                              noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:66:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef void (*unexpected_handler)();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using unexpected_handler = void (*)()
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:67:59: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
    unexpected_handler set_unexpected(unexpected_handler) throw();
                                                          ^~~~~~~~
                                                          noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:70:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef void (*terminate_handler)();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using terminate_handler = void (*)()
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:71:56: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
    terminate_handler set_terminate(terminate_handler) throw();
                                                       ^~~~~~~~
                                                       noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:30:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>
         ^~~~~~~~~~
         <cstddef>
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:37:11: warning: modification of 'std' namespace can result in undefined behavior [cert-dcl58-cpp]
namespace std
          ^
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:117:14: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_cast() throw();
                           ^~~~~~~~
                           noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:118:29: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_cast(const bad_cast&) throw();
                                          ^~~~~~~~
                                          noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:119:40: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_cast& operator=(const bad_cast&) throw();
                                                     ^~~~~~~~
                                                     noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:120:11: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
                virtual ~bad_cast();
                ~~~~~~~~^          ~
                                    override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:121:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
                virtual const char* what() const throw();
                ~~~~~~~~~~~~~~      ^                   ~
                                                         override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:121:36: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                virtual const char* what() const throw();
                                                 ^~~~~~~~
                                                 noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:130:16: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_typeid() throw();
                             ^~~~~~~~
                             noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:131:39: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_typeid(const bad_typeid &__rhs) throw();
                                                    ^~~~~~~~
                                                    noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:132:11: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
                virtual ~bad_typeid();
                ~~~~~~~~^            ~
                                      override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:133:50: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_typeid& operator=(const bad_typeid &__rhs) throw();
                                                               ^~~~~~~~
                                                               noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:134:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
                virtual const char* what() const throw();
                ~~~~~~~~~~~~~~      ^                   ~
                                                         override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:134:36: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                virtual const char* what() const throw();
                                                 ^~~~~~~~
                                                 noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:140:36: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
            bad_array_new_length() throw();
                                   ^~~~~~~~
                                   noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:141:63: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
            bad_array_new_length(const bad_array_new_length&) throw();
                                                              ^~~~~~~~
                                                              noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:142:74: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
            bad_array_new_length& operator=(const bad_array_new_length&) throw();
                                                                         ^~~~~~~~
                                                                         noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:143:21: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
            virtual ~bad_array_new_length();
            ~~~~~~~~^                      ~
                                            override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:144:33: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
            virtual const char *what() const throw();
            ~~~~~~~~~~~~~~      ^                   ~
                                                     override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:144:46: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
            virtual const char *what() const throw();
                                             ^~~~~~~~
                                             noexcept
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/../stdc++/new:36:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>
         ^~~~~~~~~~
         <cstddef>
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/../stdc++/new:40:11: warning: modification of 'std' namespace can result in undefined behavior [cert-dcl58-cpp]
namespace std
          ^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/../stdc++/new:42:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef void (*new_handler)();  // The type of the function called when allocation fails.
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using new_handler = void (*)()
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/../stdc++/new:62:13: warning: function previously declared with an explicit exception specification redeclared with an implicit exception specification [clang-diagnostic-implicit-exception-spec-mismatch]
void SGXAPI operator delete (void*);
            ^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/../stdc++/new:65:13: warning: function previously declared with an explicit exception specification redeclared with an implicit exception specification [clang-diagnostic-implicit-exception-spec-mismatch]
void SGXAPI operator delete[] (void*);
            ^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdarg.h:41:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __va_list   va_list;
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stddef.h:43:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __ptrdiff_t ptrdiff_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using ptrdiff_t = __ptrdiff_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdio.h:44:10: warning: inclusion of deprecated C++ header 'stdarg.h'; consider using 'cstdarg' instead [modernize-deprecated-headers]
#include <stdarg.h>
         ^~~~~~~~~~
         <cstdarg>
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdlib.h:43:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __size_t    size_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~
using size_t = __size_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdlib.h:55:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct {
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdlib.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct {
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdlib.h:65:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct {
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdlib.h:89:39: warning: redundant void argument list in variable declaration [modernize-redundant-void-arg]
int     _TLIBC_CDECL_ atexit(void (*)(void));
                                      ^~~~~
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/string.h:48:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef int errno_t;
^~~~~~~~~~~~~~~~~~~~
using errno_t = int
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:39:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef signed char         __int8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int8_t = signed char
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:40:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned char       __uint8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint8_t = unsigned char
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:41:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef short               __int16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int16_t = short
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:42:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned short      __uint16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint16_t = unsigned short
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:43:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef int                 __int32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int32_t = int
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:44:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned int        __uint32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint32_t = unsigned int
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:46:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long                __int64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int64_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:47:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long       __uint64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint64_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:54:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int8_t            __int_least8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_least8_t = __int8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:55:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint8_t           __uint_least8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_least8_t = __uint8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:56:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int16_t           __int_least16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_least16_t = __int16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:57:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint16_t          __uint_least16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_least16_t = __uint16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:58:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int32_t           __int_least32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_least32_t = __int32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:59:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint32_t          __uint_least32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_least32_t = __uint32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int64_t           __int_least64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_least64_t = __int64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:61:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint64_t          __uint_least64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_least64_t = __uint64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:64:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int8_t            __int_fast8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_fast8_t = __int8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:65:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint8_t           __uint_fast8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_fast8_t = __uint8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:68:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long int            __int_fast16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_fast16_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:69:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long int   __uint_fast16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_fast16_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:70:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long int            __int_fast32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_fast32_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:71:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long int   __uint_fast32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_fast32_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:72:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long int            __int_fast64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_fast64_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:73:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long int   __uint_fast64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_fast64_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:84:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long                __off_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __off_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:97:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int64_t           __intptr_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __intptr_t = __int64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:98:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint64_t          __uintptr_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uintptr_t = __uint64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:99:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int64_t           __ptrdiff_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __ptrdiff_t = __int64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:102:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long       __size_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __size_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:103:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long                __ssize_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __ssize_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:104:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef double              __double_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __double_t = double
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:105:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef float               __float_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __float_t = float
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:109:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long                __clock_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __clock_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:111:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long                __time_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __time_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:112:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __builtin_va_list   __va_list;
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:113:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned int        __wint_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __wint_t = unsigned int
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:115:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long int   __wctype_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __wctype_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:116:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef int *               __wctrans_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __wctrans_t = int *
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:123:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct {
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:132:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int64_t           __intmax_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __intmax_t = __int64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:133:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint64_t          __uintmax_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uintmax_t = __uint64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:28:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int8_t        int8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int8_t = __int8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:33:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint8_t       uint8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint8_t = __uint8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:38:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int16_t       int16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int16_t = __int16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:43:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint16_t      uint16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint16_t = __uint16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:48:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int32_t       int32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int32_t = __int32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:53:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint32_t      uint32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint32_t = __uint32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:58:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int64_t       int64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int64_t = __int64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:63:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint64_t      uint64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint64_t = __uint64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:67:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_least8_t      int_least8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_least8_t = __int_least8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:68:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_least8_t     uint_least8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_least8_t = __uint_least8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:69:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_least16_t     int_least16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_least16_t = __int_least16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:70:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_least16_t    uint_least16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_least16_t = __uint_least16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:71:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_least32_t     int_least32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_least32_t = __int_least32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:72:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_least32_t    uint_least32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_least32_t = __uint_least32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:73:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_least64_t     int_least64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_least64_t = __int_least64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:74:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_least64_t    uint_least64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_least64_t = __uint_least64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:77:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_fast8_t       int_fast8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_fast8_t = __int_fast8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:78:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_fast8_t      uint_fast8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_fast8_t = __uint_fast8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:79:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_fast16_t      int_fast16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_fast16_t = __int_fast16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:80:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_fast16_t     uint_fast16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_fast16_t = __uint_fast16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:81:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_fast32_t      int_fast32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_fast32_t = __int_fast32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:82:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_fast32_t     uint_fast32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_fast32_t = __uint_fast32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:83:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_fast64_t      int_fast64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_fast64_t = __int_fast64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:84:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_fast64_t     uint_fast64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_fast64_t = __uint_fast64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:89:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __intptr_t      intptr_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using intptr_t = __intptr_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:94:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uintptr_t     uintptr_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uintptr_t = __uintptr_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:98:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __intmax_t      intmax_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using intmax_t = __intmax_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:99:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uintmax_t     uintmax_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uintmax_t = __uintmax_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/wchar.h:84:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __mbstate_t mbstate_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using mbstate_t = __mbstate_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/wchar.h:89:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __wint_t    wint_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~
using wint_t = __wint_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/wctype.h:45:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __wctrans_t wctrans_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using wctrans_t = __wctrans_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/wctype.h:50:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __wctype_t  wctype_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using wctype_t = __wctype_t
/home/aref/projects/SGX-DDL/trusted/enclave_t.h:4:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/home/aref/projects/SGX-DDL/trusted/enclave_t.h:5:10: warning: inclusion of deprecated C++ header 'wchar.h'; consider using 'cwchar' instead [modernize-deprecated-headers]
#include <wchar.h>
         ^~~~~~~~~
         <cwchar>
/home/aref/projects/SGX-DDL/trusted/enclave_t.h:6:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>
         ^~~~~~~~~~
         <cstddef>
/home/aref/projects/SGX-DDL/trusted/enclave_t.h:10:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h> /* for size_t */
         ^~~~~~~~~~
         <cstdlib>
/home/aref/projects/SGX-DDL/trusted/include/DNNConfigIO.h:23:52: warning: parameter 'write_handler' is unused [misc-unused-parameters]
  sendToUntrusted(const std::function<void(void)> &write_handler) override {
                                                   ^~~~~~~~~~~~~~
                                                    /*write_handler*/
/home/aref/projects/SGX-DDL/trusted/include/DNNTrainer.h:18:12: warning: function 'sgx::trusted::darknet::DNNTrainer::DNNTrainer' has a definition with different parameter names [readability-inconsistent-declaration-parameter-name]
  explicit DNNTrainer(const std::string &config_file_path,
           ^
/home/aref/projects/SGX-DDL/trusted/src/DNNTrainer.cpp:9:13: note: the definition seen here
DNNTrainer::DNNTrainer(const std::string &config_file_path,
            ^
/home/aref/projects/SGX-DDL/trusted/include/DNNTrainer.h:18:12: note: differing parameters are named here: ('data_dir_path'), in definition: ('data_dir_data')
  explicit DNNTrainer(const std::string &config_file_path,
           ^
/home/aref/projects/SGX-DDL/trusted/src/DNNTrainer.cpp:4:13: warning: redundant 'printf' declaration [readability-redundant-declaration]
extern void printf(const char *fmt, ...);
~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/aref/projects/SGX-DDL/trusted/include/DNNConfigIO.h:8:13: note: previously declared here
extern void printf(const char *fmt, ...);
            ^
/home/aref/projects/SGX-DDL/trusted/src/DNNTrainer.cpp:10:43: warning: parameter 'param_dir_path' is unused [misc-unused-parameters]
                       const std::string &param_dir_path,
                                          ^~~~~~~~~~~~~~~
                                           /*param_dir_path*/
/home/aref/projects/SGX-DDL/trusted/src/DNNTrainer.cpp:11:43: warning: parameter 'data_dir_data' is unused [misc-unused-parameters]
                       const std::string &data_dir_data)
                                          ^~~~~~~~~~~~~~
                                           /*data_dir_data*/
/home/aref/projects/SGX-DDL/trusted/src/DNNTrainer.cpp:14:17: warning: use std::make_unique instead [modernize-make-unique]
      configIO_(std::unique_ptr<DNNConfigIO>(
                ^~~~~~~~~~~~~~~~
                std::make_unique
/home/aref/projects/SGX-DDL/trusted/src/DNNTrainer.cpp:20:14: warning: redundant boolean literal supplied to boolean operator [readability-simplify-boolean-expr]
  if (res != true) {
      ~~~~~~~^~~~~
      !res
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cctype:39:10: warning: inclusion of deprecated C++ header 'ctype.h'; consider using 'cctype' instead [modernize-deprecated-headers]
#include <ctype.h>
         ^~~~~~~~~
         <cctype>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/climits:42:10: warning: inclusion of deprecated C++ header 'limits.h'; consider using 'climits' instead [modernize-deprecated-headers]
#include <limits.h>
         ^~~~~~~~~~
         <climits>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cstddef:38:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>
         ^~~~~~~~~~
         <cstddef>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cstdint:145:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cstdio:100:10: warning: inclusion of deprecated C++ header 'stdio.h'; consider using 'cstdio' instead [modernize-deprecated-headers]
#include <stdio.h>
         ^~~~~~~~~
         <cstdio>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cstdlib:86:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cstring:61:10: warning: inclusion of deprecated C++ header 'string.h'; consider using 'cstring' instead [modernize-deprecated-headers]
#include <string.h>
         ^~~~~~~~~~
         <cstring>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cwchar:108:10: warning: inclusion of deprecated C++ header 'wchar.h'; consider using 'cwchar' instead [modernize-deprecated-headers]
#include <wchar.h>
         ^~~~~~~~~
         <cwchar>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cwctype:55:10: warning: inclusion of deprecated C++ header 'wctype.h'; consider using 'cwctype' instead [modernize-deprecated-headers]
#include <wctype.h>
         ^~~~~~~~~~
         <cwctype>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/iosfwd:90:10: warning: inclusion of deprecated C++ header 'wchar.h'; consider using 'cwchar' instead [modernize-deprecated-headers]
#include <wchar.h>  // for mbstate_t
         ^~~~~~~~~
         <cwchar>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/new:170:1: warning: modification of 'std' namespace can result in undefined behavior [cert-dcl58-cpp]
_LIBCPP_BEGIN_NAMESPACE_STD
^
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/__config:441:47: note: expanded from macro '_LIBCPP_BEGIN_NAMESPACE_STD'
#define _LIBCPP_BEGIN_NAMESPACE_STD namespace std {inline namespace _LIBCPP_NAMESPACE {
                                              ^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_attributes.h:35:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_attributes.h:53:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _attributes_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_attributes.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint32_t    sgx_misc_select_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_misc_select_t = uint32_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_attributes.h:62:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_misc_attribute_t {
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_defs.h:42:55: warning: macro replacement list should be enclosed in parentheses [misc-macro-parentheses]
# define SGX_CXX_NATIVE_HEADER(header)   <stdc++/linux/header>
                                         ~            ^
                                         (                    )
/opt/intel/sgx-2.2/sgxsdk/include/sgx_defs.h:42:56: warning: macro argument should be enclosed in parentheses [misc-macro-parentheses]
# define SGX_CXX_NATIVE_HEADER(header)   <stdc++/linux/header>
                                                       ^~~~~~~
                                                       ()
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:49:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>         /* for size_t */
         ^~~~~~~~~~
         <cstddef>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:90:31: warning: parameter 'eid' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ecall(const sgx_enclave_id_t eid,
                              ^~~~~~~~~~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:91:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                              const int index,
                              ^~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:94:42: warning: parameter 'eid' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ecall_switchless(const sgx_enclave_id_t eid,
                                         ^~~~~~~~~~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:95:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                              const int index,
                              ^~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:106:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ocall(const unsigned int index,
                              ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:108:42: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ocall_switchless(const unsigned int index,
                                         ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_eid.h:35:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_eid.h:37:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint64_t sgx_enclave_id_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_enclave_id_t = uint64_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_error.h:37:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef enum _status_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:42:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:59:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t                    sgx_key_128bit_t[16];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint16_t                   sgx_isv_svn_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_isv_svn_t = uint16_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:62:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_cpu_svn_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:67:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_key_id_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:74:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _key_request_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:49:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_measurement_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:54:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t             sgx_mac_t[SGX_MAC_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:56:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_report_data_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:61:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint16_t            sgx_prod_id_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_prod_id_t = uint16_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:66:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _target_info_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:75:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _report_body_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:91:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _report_t                    /* 432 bytes */
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_spinlock.h:40:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_spinlock.h:42:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef volatile uint32_t sgx_spinlock_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_spinlock_t = volatile uint32_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:45:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include "stdlib.h"
         ^~~~~~~~~~
         <cstdlib>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_ec256_dh_shared_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:65:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_ec256_private_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:70:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_ec256_public_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:76:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_ec256_signature_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:82:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_rsa3072_public_key_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:88:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_rsa3072_key_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:95:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_rsa3072_signature_t[SGX_RSA3072_KEY_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:97:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef void* sgx_sha_state_handle_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_sha_state_handle_t = void *
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:98:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef void* sgx_cmac_state_handle_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_cmac_state_handle_t = void *
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:99:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef void* sgx_ecc_state_handle_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_ecc_state_handle_t = void *
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:101:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_sha256_hash_t[SGX_SHA256_HASH_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:103:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_aes_gcm_128bit_key_t[SGX_AESGCM_KEY_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:104:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_aes_gcm_128bit_tag_t[SGX_AESGCM_MAC_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:105:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_cmac_128bit_key_t[SGX_CMAC_KEY_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:106:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_cmac_128bit_tag_t[SGX_CMAC_MAC_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:107:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_aes_ctr_128bit_key_t[SGX_AESCTR_KEY_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:109:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef enum {
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:136:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef enum {
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:142:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef enum {
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:166:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _rsa_params_t {
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:432:25: warning: parameter 'src_len' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                        const uint32_t src_len,
                        ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:434:25: warning: parameter 'ctr_inc_bits' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                        const uint32_t ctr_inc_bits,
                        ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:440:25: warning: parameter 'src_len' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                        const uint32_t src_len,
                        ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:442:25: warning: parameter 'ctr_inc_bits' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                        const uint32_t ctr_inc_bits,
                        ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:525:37: warning: parameter 'ecc_handle' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                                    const sgx_ecc_state_handle_t ecc_handle,
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:525:66: warning: 'ecc_handle' declared with a const-qualified typedef type; results in the type being 'void *const' instead of 'const void *' [misc-misplaced-const]
                                    const sgx_ecc_state_handle_t ecc_handle,
                                                                 ^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:99:15: note: typedef declared here
typedef void* sgx_ecc_state_handle_t;
              ^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:719:136: warning: parameter 'pin_len' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
    sgx_status_t sgx_rsa_priv_decrypt_sha256(void* rsa_key, unsigned char* pout_data, size_t* pout_len, const unsigned char* pin_data, const size_t pin_len);
                                                                                                                                       ^~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:732:135: warning: parameter 'pin_len' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
    sgx_status_t sgx_rsa_pub_encrypt_sha256(void* rsa_key, unsigned char* pout_data, size_t* pout_len, const unsigned char* pin_data, const size_t pin_len);
                                                                                                                                      ^~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:31:11: warning: modification of 'std' namespace can result in undefined behavior [cert-dcl58-cpp]
namespace std
          ^
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:36:15: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                exception() throw();
                            ^~~~~~~~
                            noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:37:31: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                exception(const exception&) throw();
                                            ^~~~~~~~
                                            noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:38:42: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                exception& operator=(const exception&) throw();
                                                       ^~~~~~~~
                                                       noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:40:36: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                virtual const char* what() const throw();
                                                 ^~~~~~~~
                                                 noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:49:15: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_alloc() throw();
                            ^~~~~~~~
                            noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:50:31: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_alloc(const bad_alloc&) throw();
                                            ^~~~~~~~
                                            noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:51:42: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_alloc& operator=(const bad_alloc&) throw();
                                                       ^~~~~~~~
                                                       noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:52:3: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
                ~bad_alloc();
                ^           ~
                             override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:53:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
                virtual const char* what() const throw();
                ~~~~~~~~~~~~~~      ^                   ~
                                                         override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:53:36: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                virtual const char* what() const throw();
                                                 ^~~~~~~~
                                                 noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:59:25: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
        bad_exception() throw();
                        ^~~~~~~~
                        noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:60:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
        virtual ~bad_exception() throw();
        ~~~~~~~~^                       ~
                                         override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:60:34: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
        virtual ~bad_exception() throw();
                                 ^~~~~~~~
                                 noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:61:29: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
        virtual const char* what() const throw();
        ~~~~~~~~~~~~~~      ^                   ~
                                                 override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:61:42: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
        virtual const char* what() const throw();
                                         ^~~~~~~~
                                         noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:64:31: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
    bool uncaught_exception() throw();
                              ^~~~~~~~
                              noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:66:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef void (*unexpected_handler)();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using unexpected_handler = void (*)()
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:67:59: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
    unexpected_handler set_unexpected(unexpected_handler) throw();
                                                          ^~~~~~~~
                                                          noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:70:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef void (*terminate_handler)();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using terminate_handler = void (*)()
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:71:56: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
    terminate_handler set_terminate(terminate_handler) throw();
                                                       ^~~~~~~~
                                                       noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:30:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>
         ^~~~~~~~~~
         <cstddef>
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:37:11: warning: modification of 'std' namespace can result in undefined behavior [cert-dcl58-cpp]
namespace std
          ^
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:117:14: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_cast() throw();
                           ^~~~~~~~
                           noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:118:29: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_cast(const bad_cast&) throw();
                                          ^~~~~~~~
                                          noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:119:40: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_cast& operator=(const bad_cast&) throw();
                                                     ^~~~~~~~
                                                     noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:120:11: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
                virtual ~bad_cast();
                ~~~~~~~~^          ~
                                    override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:121:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
                virtual const char* what() const throw();
                ~~~~~~~~~~~~~~      ^                   ~
                                                         override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:121:36: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                virtual const char* what() const throw();
                                                 ^~~~~~~~
                                                 noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:130:16: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_typeid() throw();
                             ^~~~~~~~
                             noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:131:39: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_typeid(const bad_typeid &__rhs) throw();
                                                    ^~~~~~~~
                                                    noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:132:11: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
                virtual ~bad_typeid();
                ~~~~~~~~^            ~
                                      override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:133:50: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_typeid& operator=(const bad_typeid &__rhs) throw();
                                                               ^~~~~~~~
                                                               noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:134:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
                virtual const char* what() const throw();
                ~~~~~~~~~~~~~~      ^                   ~
                                                         override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:134:36: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                virtual const char* what() const throw();
                                                 ^~~~~~~~
                                                 noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:140:36: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
            bad_array_new_length() throw();
                                   ^~~~~~~~
                                   noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:141:63: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
            bad_array_new_length(const bad_array_new_length&) throw();
                                                              ^~~~~~~~
                                                              noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:142:74: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
            bad_array_new_length& operator=(const bad_array_new_length&) throw();
                                                                         ^~~~~~~~
                                                                         noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:143:21: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
            virtual ~bad_array_new_length();
            ~~~~~~~~^                      ~
                                            override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:144:33: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
            virtual const char *what() const throw();
            ~~~~~~~~~~~~~~      ^                   ~
                                                     override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:144:46: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
            virtual const char *what() const throw();
                                             ^~~~~~~~
                                             noexcept
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/../stdc++/new:36:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>
         ^~~~~~~~~~
         <cstddef>
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/../stdc++/new:40:11: warning: modification of 'std' namespace can result in undefined behavior [cert-dcl58-cpp]
namespace std
          ^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/../stdc++/new:42:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef void (*new_handler)();  // The type of the function called when allocation fails.
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using new_handler = void (*)()
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/../stdc++/new:62:13: warning: function previously declared with an explicit exception specification redeclared with an implicit exception specification [clang-diagnostic-implicit-exception-spec-mismatch]
void SGXAPI operator delete (void*);
            ^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/../stdc++/new:65:13: warning: function previously declared with an explicit exception specification redeclared with an implicit exception specification [clang-diagnostic-implicit-exception-spec-mismatch]
void SGXAPI operator delete[] (void*);
            ^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdarg.h:41:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __va_list   va_list;
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stddef.h:43:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __ptrdiff_t ptrdiff_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using ptrdiff_t = __ptrdiff_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdio.h:44:10: warning: inclusion of deprecated C++ header 'stdarg.h'; consider using 'cstdarg' instead [modernize-deprecated-headers]
#include <stdarg.h>
         ^~~~~~~~~~
         <cstdarg>
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdlib.h:43:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __size_t    size_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~
using size_t = __size_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdlib.h:55:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct {
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdlib.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct {
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdlib.h:65:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct {
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdlib.h:89:39: warning: redundant void argument list in variable declaration [modernize-redundant-void-arg]
int     _TLIBC_CDECL_ atexit(void (*)(void));
                                      ^~~~~
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/string.h:48:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef int errno_t;
^~~~~~~~~~~~~~~~~~~~
using errno_t = int
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:39:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef signed char         __int8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int8_t = signed char
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:40:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned char       __uint8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint8_t = unsigned char
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:41:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef short               __int16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int16_t = short
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:42:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned short      __uint16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint16_t = unsigned short
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:43:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef int                 __int32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int32_t = int
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:44:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned int        __uint32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint32_t = unsigned int
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:46:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long                __int64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int64_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:47:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long       __uint64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint64_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:54:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int8_t            __int_least8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_least8_t = __int8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:55:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint8_t           __uint_least8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_least8_t = __uint8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:56:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int16_t           __int_least16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_least16_t = __int16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:57:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint16_t          __uint_least16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_least16_t = __uint16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:58:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int32_t           __int_least32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_least32_t = __int32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:59:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint32_t          __uint_least32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_least32_t = __uint32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int64_t           __int_least64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_least64_t = __int64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:61:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint64_t          __uint_least64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_least64_t = __uint64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:64:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int8_t            __int_fast8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_fast8_t = __int8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:65:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint8_t           __uint_fast8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_fast8_t = __uint8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:68:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long int            __int_fast16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_fast16_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:69:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long int   __uint_fast16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_fast16_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:70:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long int            __int_fast32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_fast32_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:71:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long int   __uint_fast32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_fast32_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:72:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long int            __int_fast64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_fast64_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:73:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long int   __uint_fast64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_fast64_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:84:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long                __off_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __off_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:97:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int64_t           __intptr_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __intptr_t = __int64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:98:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint64_t          __uintptr_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uintptr_t = __uint64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:99:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int64_t           __ptrdiff_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __ptrdiff_t = __int64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:102:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long       __size_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __size_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:103:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long                __ssize_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __ssize_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:104:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef double              __double_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __double_t = double
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:105:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef float               __float_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __float_t = float
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:109:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long                __clock_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __clock_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:111:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long                __time_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __time_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:112:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __builtin_va_list   __va_list;
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:113:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned int        __wint_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __wint_t = unsigned int
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:115:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long int   __wctype_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __wctype_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:116:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef int *               __wctrans_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __wctrans_t = int *
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:123:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct {
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:132:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int64_t           __intmax_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __intmax_t = __int64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:133:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint64_t          __uintmax_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uintmax_t = __uint64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:28:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int8_t        int8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int8_t = __int8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:33:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint8_t       uint8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint8_t = __uint8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:38:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int16_t       int16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int16_t = __int16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:43:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint16_t      uint16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint16_t = __uint16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:48:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int32_t       int32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int32_t = __int32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:53:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint32_t      uint32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint32_t = __uint32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:58:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int64_t       int64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int64_t = __int64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:63:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint64_t      uint64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint64_t = __uint64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:67:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_least8_t      int_least8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_least8_t = __int_least8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:68:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_least8_t     uint_least8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_least8_t = __uint_least8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:69:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_least16_t     int_least16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_least16_t = __int_least16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:70:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_least16_t    uint_least16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_least16_t = __uint_least16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:71:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_least32_t     int_least32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_least32_t = __int_least32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:72:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_least32_t    uint_least32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_least32_t = __uint_least32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:73:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_least64_t     int_least64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_least64_t = __int_least64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:74:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_least64_t    uint_least64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_least64_t = __uint_least64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:77:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_fast8_t       int_fast8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_fast8_t = __int_fast8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:78:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_fast8_t      uint_fast8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_fast8_t = __uint_fast8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:79:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_fast16_t      int_fast16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_fast16_t = __int_fast16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:80:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_fast16_t     uint_fast16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_fast16_t = __uint_fast16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:81:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_fast32_t      int_fast32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_fast32_t = __int_fast32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:82:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_fast32_t     uint_fast32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_fast32_t = __uint_fast32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:83:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_fast64_t      int_fast64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_fast64_t = __int_fast64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:84:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_fast64_t     uint_fast64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_fast64_t = __uint_fast64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:89:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __intptr_t      intptr_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using intptr_t = __intptr_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:94:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uintptr_t     uintptr_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uintptr_t = __uintptr_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:98:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __intmax_t      intmax_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using intmax_t = __intmax_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:99:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uintmax_t     uintmax_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uintmax_t = __uintmax_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/wchar.h:84:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __mbstate_t mbstate_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using mbstate_t = __mbstate_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/wchar.h:89:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __wint_t    wint_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~
using wint_t = __wint_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/wctype.h:45:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __wctrans_t wctrans_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using wctrans_t = __wctrans_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/wctype.h:50:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __wctype_t  wctype_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using wctype_t = __wctype_t
/home/aref/projects/SGX-DDL/trusted/enclave_t.h:4:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/home/aref/projects/SGX-DDL/trusted/enclave_t.h:5:10: warning: inclusion of deprecated C++ header 'wchar.h'; consider using 'cwchar' instead [modernize-deprecated-headers]
#include <wchar.h>
         ^~~~~~~~~
         <cwchar>
/home/aref/projects/SGX-DDL/trusted/enclave_t.h:6:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>
         ^~~~~~~~~~
         <cstddef>
/home/aref/projects/SGX-DDL/trusted/enclave_t.h:10:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h> /* for size_t */
         ^~~~~~~~~~
         <cstdlib>
/home/aref/projects/SGX-DDL/trusted/include/DNNConfigIO.h:23:52: warning: parameter 'write_handler' is unused [misc-unused-parameters]
  sendToUntrusted(const std::function<void(void)> &write_handler) override {
                                                   ^~~~~~~~~~~~~~
                                                    /*write_handler*/
/home/aref/projects/SGX-DDL/trusted/include/IO.h:34:15: warning: pass by value and use std::move [modernize-pass-by-value]
              const IOCipher &cipher_buff, const IOPlain &plain_buff);
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
              IOCipher 
/home/aref/projects/SGX-DDL/trusted/include/IO.h:34:44: warning: pass by value and use std::move [modernize-pass-by-value]
              const IOCipher &cipher_buff, const IOPlain &plain_buff);
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~
                                           IOPlain 
/home/aref/projects/SGX-DDL/trusted/src/DNNConfigIO.cpp:7:26: warning: pass by value and use std::move [modernize-pass-by-value]
DNNConfigIO::DNNConfigIO(const std::string &config_file_path,
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         std::string 
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cctype:39:10: warning: inclusion of deprecated C++ header 'ctype.h'; consider using 'cctype' instead [modernize-deprecated-headers]
#include <ctype.h>
         ^~~~~~~~~
         <cctype>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/climits:42:10: warning: inclusion of deprecated C++ header 'limits.h'; consider using 'climits' instead [modernize-deprecated-headers]
#include <limits.h>
         ^~~~~~~~~~
         <climits>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cstddef:38:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>
         ^~~~~~~~~~
         <cstddef>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cstdint:145:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cstdio:100:10: warning: inclusion of deprecated C++ header 'stdio.h'; consider using 'cstdio' instead [modernize-deprecated-headers]
#include <stdio.h>
         ^~~~~~~~~
         <cstdio>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cstdlib:86:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cstring:61:10: warning: inclusion of deprecated C++ header 'string.h'; consider using 'cstring' instead [modernize-deprecated-headers]
#include <string.h>
         ^~~~~~~~~~
         <cstring>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cwchar:108:10: warning: inclusion of deprecated C++ header 'wchar.h'; consider using 'cwchar' instead [modernize-deprecated-headers]
#include <wchar.h>
         ^~~~~~~~~
         <cwchar>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/cwctype:55:10: warning: inclusion of deprecated C++ header 'wctype.h'; consider using 'cwctype' instead [modernize-deprecated-headers]
#include <wctype.h>
         ^~~~~~~~~~
         <cwctype>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/iosfwd:90:10: warning: inclusion of deprecated C++ header 'wchar.h'; consider using 'cwchar' instead [modernize-deprecated-headers]
#include <wchar.h>  // for mbstate_t
         ^~~~~~~~~
         <cwchar>
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/new:170:1: warning: modification of 'std' namespace can result in undefined behavior [cert-dcl58-cpp]
_LIBCPP_BEGIN_NAMESPACE_STD
^
/opt/intel/sgx-2.2/sgxsdk/include/libcxx/__config:441:47: note: expanded from macro '_LIBCPP_BEGIN_NAMESPACE_STD'
#define _LIBCPP_BEGIN_NAMESPACE_STD namespace std {inline namespace _LIBCPP_NAMESPACE {
                                              ^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_attributes.h:35:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_attributes.h:53:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _attributes_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_attributes.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint32_t    sgx_misc_select_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_misc_select_t = uint32_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_attributes.h:62:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_misc_attribute_t {
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_defs.h:42:55: warning: macro replacement list should be enclosed in parentheses [misc-macro-parentheses]
# define SGX_CXX_NATIVE_HEADER(header)   <stdc++/linux/header>
                                         ~            ^
                                         (                    )
/opt/intel/sgx-2.2/sgxsdk/include/sgx_defs.h:42:56: warning: macro argument should be enclosed in parentheses [misc-macro-parentheses]
# define SGX_CXX_NATIVE_HEADER(header)   <stdc++/linux/header>
                                                       ^~~~~~~
                                                       ()
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:49:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>         /* for size_t */
         ^~~~~~~~~~
         <cstddef>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:90:31: warning: parameter 'eid' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ecall(const sgx_enclave_id_t eid,
                              ^~~~~~~~~~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:91:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                              const int index,
                              ^~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:94:42: warning: parameter 'eid' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ecall_switchless(const sgx_enclave_id_t eid,
                                         ^~~~~~~~~~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:95:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                              const int index,
                              ^~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:106:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ocall(const unsigned int index,
                              ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:108:42: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ocall_switchless(const unsigned int index,
                                         ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_eid.h:35:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_eid.h:37:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint64_t sgx_enclave_id_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_enclave_id_t = uint64_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_error.h:37:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef enum _status_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:42:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:59:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t                    sgx_key_128bit_t[16];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint16_t                   sgx_isv_svn_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_isv_svn_t = uint16_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:62:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_cpu_svn_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:67:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_key_id_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:74:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _key_request_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:49:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_measurement_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:54:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t             sgx_mac_t[SGX_MAC_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:56:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_report_data_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:61:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint16_t            sgx_prod_id_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_prod_id_t = uint16_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:66:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _target_info_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:75:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _report_body_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:91:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _report_t                    /* 432 bytes */
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_spinlock.h:40:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_spinlock.h:42:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef volatile uint32_t sgx_spinlock_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_spinlock_t = volatile uint32_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:45:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include "stdlib.h"
         ^~~~~~~~~~
         <cstdlib>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_ec256_dh_shared_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:65:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_ec256_private_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:70:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_ec256_public_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:76:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_ec256_signature_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:82:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_rsa3072_public_key_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:88:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_rsa3072_key_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:95:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_rsa3072_signature_t[SGX_RSA3072_KEY_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:97:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef void* sgx_sha_state_handle_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_sha_state_handle_t = void *
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:98:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef void* sgx_cmac_state_handle_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_cmac_state_handle_t = void *
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:99:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef void* sgx_ecc_state_handle_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_ecc_state_handle_t = void *
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:101:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_sha256_hash_t[SGX_SHA256_HASH_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:103:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_aes_gcm_128bit_key_t[SGX_AESGCM_KEY_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:104:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_aes_gcm_128bit_tag_t[SGX_AESGCM_MAC_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:105:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_cmac_128bit_key_t[SGX_CMAC_KEY_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:106:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_cmac_128bit_tag_t[SGX_CMAC_MAC_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:107:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_aes_ctr_128bit_key_t[SGX_AESCTR_KEY_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:109:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef enum {
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:136:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef enum {
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:142:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef enum {
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:166:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _rsa_params_t {
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:432:25: warning: parameter 'src_len' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                        const uint32_t src_len,
                        ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:434:25: warning: parameter 'ctr_inc_bits' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                        const uint32_t ctr_inc_bits,
                        ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:440:25: warning: parameter 'src_len' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                        const uint32_t src_len,
                        ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:442:25: warning: parameter 'ctr_inc_bits' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                        const uint32_t ctr_inc_bits,
                        ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:525:37: warning: parameter 'ecc_handle' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                                    const sgx_ecc_state_handle_t ecc_handle,
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:525:66: warning: 'ecc_handle' declared with a const-qualified typedef type; results in the type being 'void *const' instead of 'const void *' [misc-misplaced-const]
                                    const sgx_ecc_state_handle_t ecc_handle,
                                                                 ^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:99:15: note: typedef declared here
typedef void* sgx_ecc_state_handle_t;
              ^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:719:136: warning: parameter 'pin_len' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
    sgx_status_t sgx_rsa_priv_decrypt_sha256(void* rsa_key, unsigned char* pout_data, size_t* pout_len, const unsigned char* pin_data, const size_t pin_len);
                                                                                                                                       ^~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_tcrypto.h:732:135: warning: parameter 'pin_len' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
    sgx_status_t sgx_rsa_pub_encrypt_sha256(void* rsa_key, unsigned char* pout_data, size_t* pout_len, const unsigned char* pin_data, const size_t pin_len);
                                                                                                                                      ^~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:31:11: warning: modification of 'std' namespace can result in undefined behavior [cert-dcl58-cpp]
namespace std
          ^
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:36:15: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                exception() throw();
                            ^~~~~~~~
                            noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:37:31: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                exception(const exception&) throw();
                                            ^~~~~~~~
                                            noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:38:42: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                exception& operator=(const exception&) throw();
                                                       ^~~~~~~~
                                                       noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:40:36: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                virtual const char* what() const throw();
                                                 ^~~~~~~~
                                                 noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:49:15: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_alloc() throw();
                            ^~~~~~~~
                            noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:50:31: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_alloc(const bad_alloc&) throw();
                                            ^~~~~~~~
                                            noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:51:42: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_alloc& operator=(const bad_alloc&) throw();
                                                       ^~~~~~~~
                                                       noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:52:3: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
                ~bad_alloc();
                ^           ~
                             override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:53:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
                virtual const char* what() const throw();
                ~~~~~~~~~~~~~~      ^                   ~
                                                         override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:53:36: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                virtual const char* what() const throw();
                                                 ^~~~~~~~
                                                 noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:59:25: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
        bad_exception() throw();
                        ^~~~~~~~
                        noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:60:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
        virtual ~bad_exception() throw();
        ~~~~~~~~^                       ~
                                         override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:60:34: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
        virtual ~bad_exception() throw();
                                 ^~~~~~~~
                                 noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:61:29: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
        virtual const char* what() const throw();
        ~~~~~~~~~~~~~~      ^                   ~
                                                 override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:61:42: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
        virtual const char* what() const throw();
                                         ^~~~~~~~
                                         noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:64:31: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
    bool uncaught_exception() throw();
                              ^~~~~~~~
                              noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:66:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef void (*unexpected_handler)();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using unexpected_handler = void (*)()
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:67:59: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
    unexpected_handler set_unexpected(unexpected_handler) throw();
                                                          ^~~~~~~~
                                                          noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:70:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef void (*terminate_handler)();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using terminate_handler = void (*)()
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/exception:71:56: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
    terminate_handler set_terminate(terminate_handler) throw();
                                                       ^~~~~~~~
                                                       noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:30:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>
         ^~~~~~~~~~
         <cstddef>
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:37:11: warning: modification of 'std' namespace can result in undefined behavior [cert-dcl58-cpp]
namespace std
          ^
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:117:14: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_cast() throw();
                           ^~~~~~~~
                           noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:118:29: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_cast(const bad_cast&) throw();
                                          ^~~~~~~~
                                          noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:119:40: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_cast& operator=(const bad_cast&) throw();
                                                     ^~~~~~~~
                                                     noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:120:11: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
                virtual ~bad_cast();
                ~~~~~~~~^          ~
                                    override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:121:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
                virtual const char* what() const throw();
                ~~~~~~~~~~~~~~      ^                   ~
                                                         override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:121:36: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                virtual const char* what() const throw();
                                                 ^~~~~~~~
                                                 noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:130:16: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_typeid() throw();
                             ^~~~~~~~
                             noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:131:39: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_typeid(const bad_typeid &__rhs) throw();
                                                    ^~~~~~~~
                                                    noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:132:11: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
                virtual ~bad_typeid();
                ~~~~~~~~^            ~
                                      override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:133:50: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                bad_typeid& operator=(const bad_typeid &__rhs) throw();
                                                               ^~~~~~~~
                                                               noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:134:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
                virtual const char* what() const throw();
                ~~~~~~~~~~~~~~      ^                   ~
                                                         override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:134:36: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
                virtual const char* what() const throw();
                                                 ^~~~~~~~
                                                 noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:140:36: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
            bad_array_new_length() throw();
                                   ^~~~~~~~
                                   noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:141:63: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
            bad_array_new_length(const bad_array_new_length&) throw();
                                                              ^~~~~~~~
                                                              noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:142:74: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
            bad_array_new_length& operator=(const bad_array_new_length&) throw();
                                                                         ^~~~~~~~
                                                                         noexcept
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:143:21: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
            virtual ~bad_array_new_length();
            ~~~~~~~~^                      ~
                                            override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:144:33: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
            virtual const char *what() const throw();
            ~~~~~~~~~~~~~~      ^                   ~
                                                     override
/opt/intel/sgx-2.2/sgxsdk/include/stdc++/linux/typeinfo:144:46: warning: dynamic exception specification 'throw()' is deprecated; consider using 'noexcept' instead [modernize-use-noexcept]
            virtual const char *what() const throw();
                                             ^~~~~~~~
                                             noexcept
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/../stdc++/new:36:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>
         ^~~~~~~~~~
         <cstddef>
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/../stdc++/new:40:11: warning: modification of 'std' namespace can result in undefined behavior [cert-dcl58-cpp]
namespace std
          ^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/../stdc++/new:42:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef void (*new_handler)();  // The type of the function called when allocation fails.
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using new_handler = void (*)()
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/../stdc++/new:62:13: warning: function previously declared with an explicit exception specification redeclared with an implicit exception specification [clang-diagnostic-implicit-exception-spec-mismatch]
void SGXAPI operator delete (void*);
            ^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/../stdc++/new:65:13: warning: function previously declared with an explicit exception specification redeclared with an implicit exception specification [clang-diagnostic-implicit-exception-spec-mismatch]
void SGXAPI operator delete[] (void*);
            ^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdarg.h:41:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __va_list   va_list;
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stddef.h:43:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __ptrdiff_t ptrdiff_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using ptrdiff_t = __ptrdiff_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdio.h:44:10: warning: inclusion of deprecated C++ header 'stdarg.h'; consider using 'cstdarg' instead [modernize-deprecated-headers]
#include <stdarg.h>
         ^~~~~~~~~~
         <cstdarg>
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdlib.h:43:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __size_t    size_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~
using size_t = __size_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdlib.h:55:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct {
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdlib.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct {
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdlib.h:65:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct {
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/stdlib.h:89:39: warning: redundant void argument list in variable declaration [modernize-redundant-void-arg]
int     _TLIBC_CDECL_ atexit(void (*)(void));
                                      ^~~~~
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/string.h:48:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef int errno_t;
^~~~~~~~~~~~~~~~~~~~
using errno_t = int
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:39:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef signed char         __int8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int8_t = signed char
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:40:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned char       __uint8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint8_t = unsigned char
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:41:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef short               __int16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int16_t = short
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:42:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned short      __uint16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint16_t = unsigned short
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:43:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef int                 __int32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int32_t = int
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:44:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned int        __uint32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint32_t = unsigned int
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:46:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long                __int64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int64_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:47:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long       __uint64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint64_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:54:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int8_t            __int_least8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_least8_t = __int8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:55:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint8_t           __uint_least8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_least8_t = __uint8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:56:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int16_t           __int_least16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_least16_t = __int16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:57:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint16_t          __uint_least16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_least16_t = __uint16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:58:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int32_t           __int_least32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_least32_t = __int32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:59:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint32_t          __uint_least32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_least32_t = __uint32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int64_t           __int_least64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_least64_t = __int64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:61:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint64_t          __uint_least64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_least64_t = __uint64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:64:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int8_t            __int_fast8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_fast8_t = __int8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:65:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint8_t           __uint_fast8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_fast8_t = __uint8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:68:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long int            __int_fast16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_fast16_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:69:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long int   __uint_fast16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_fast16_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:70:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long int            __int_fast32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_fast32_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:71:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long int   __uint_fast32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_fast32_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:72:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long int            __int_fast64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __int_fast64_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:73:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long int   __uint_fast64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uint_fast64_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:84:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long                __off_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __off_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:97:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int64_t           __intptr_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __intptr_t = __int64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:98:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint64_t          __uintptr_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uintptr_t = __uint64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:99:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int64_t           __ptrdiff_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __ptrdiff_t = __int64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:102:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long       __size_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __size_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:103:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long                __ssize_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __ssize_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:104:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef double              __double_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __double_t = double
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:105:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef float               __float_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __float_t = float
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:109:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long                __clock_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __clock_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:111:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef long                __time_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __time_t = long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:112:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __builtin_va_list   __va_list;
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:113:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned int        __wint_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __wint_t = unsigned int
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:115:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef unsigned long int   __wctype_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __wctype_t = unsigned long
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:116:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef int *               __wctrans_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __wctrans_t = int *
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:123:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct {
^
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:132:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int64_t           __intmax_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __intmax_t = __int64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/_types.h:133:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint64_t          __uintmax_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using __uintmax_t = __uint64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:28:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int8_t        int8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int8_t = __int8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:33:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint8_t       uint8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint8_t = __uint8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:38:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int16_t       int16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int16_t = __int16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:43:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint16_t      uint16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint16_t = __uint16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:48:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int32_t       int32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int32_t = __int32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:53:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint32_t      uint32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint32_t = __uint32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:58:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int64_t       int64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int64_t = __int64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:63:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint64_t      uint64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint64_t = __uint64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:67:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_least8_t      int_least8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_least8_t = __int_least8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:68:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_least8_t     uint_least8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_least8_t = __uint_least8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:69:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_least16_t     int_least16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_least16_t = __int_least16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:70:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_least16_t    uint_least16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_least16_t = __uint_least16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:71:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_least32_t     int_least32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_least32_t = __int_least32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:72:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_least32_t    uint_least32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_least32_t = __uint_least32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:73:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_least64_t     int_least64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_least64_t = __int_least64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:74:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_least64_t    uint_least64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_least64_t = __uint_least64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:77:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_fast8_t       int_fast8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_fast8_t = __int_fast8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:78:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_fast8_t      uint_fast8_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_fast8_t = __uint_fast8_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:79:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_fast16_t      int_fast16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_fast16_t = __int_fast16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:80:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_fast16_t     uint_fast16_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_fast16_t = __uint_fast16_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:81:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_fast32_t      int_fast32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_fast32_t = __int_fast32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:82:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_fast32_t     uint_fast32_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_fast32_t = __uint_fast32_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:83:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __int_fast64_t      int_fast64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using int_fast64_t = __int_fast64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:84:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uint_fast64_t     uint_fast64_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uint_fast64_t = __uint_fast64_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:89:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __intptr_t      intptr_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using intptr_t = __intptr_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:94:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uintptr_t     uintptr_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uintptr_t = __uintptr_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:98:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __intmax_t      intmax_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using intmax_t = __intmax_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/sys/stdint.h:99:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __uintmax_t     uintmax_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using uintmax_t = __uintmax_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/wchar.h:84:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __mbstate_t mbstate_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using mbstate_t = __mbstate_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/wchar.h:89:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __wint_t    wint_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~
using wint_t = __wint_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/wctype.h:45:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __wctrans_t wctrans_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using wctrans_t = __wctrans_t
/opt/intel/sgx-2.2/sgxsdk/include/tlibc/wctype.h:50:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef __wctype_t  wctype_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using wctype_t = __wctype_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_defs.h:42:55: warning: macro replacement list should be enclosed in parentheses [misc-macro-parentheses]
# define SGX_CXX_NATIVE_HEADER(header)   <stdc++/linux/header>
                                         ~            ^
                                         (                    )
/opt/intel/sgx-2.2/sgxsdk/include/sgx_defs.h:42:56: warning: macro argument should be enclosed in parentheses [misc-macro-parentheses]
# define SGX_CXX_NATIVE_HEADER(header)   <stdc++/linux/header>
                                                       ^~~~~~~
                                                       ()
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:90:31: warning: parameter 'eid' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ecall(const sgx_enclave_id_t eid,
                              ^~~~~~~~~~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:91:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                              const int index,
                              ^~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:94:42: warning: parameter 'eid' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ecall_switchless(const sgx_enclave_id_t eid,
                                         ^~~~~~~~~~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:95:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                              const int index,
                              ^~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:106:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ocall(const unsigned int index,
                              ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:108:42: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ocall_switchless(const unsigned int index,
                                         ^~~~~~~~~~~~~~~
/home/aref/projects/SGX-DDL/untrusted/enclave_u.h:4:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/home/aref/projects/SGX-DDL/untrusted/enclave_u.h:5:10: warning: inclusion of deprecated C++ header 'wchar.h'; consider using 'cwchar' instead [modernize-deprecated-headers]
#include <wchar.h>
         ^~~~~~~~~
         <cwchar>
/home/aref/projects/SGX-DDL/untrusted/enclave_u.h:6:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>
         ^~~~~~~~~~
         <cstddef>
/home/aref/projects/SGX-DDL/untrusted/enclave_u.h:7:10: warning: inclusion of deprecated C++ header 'string.h'; consider using 'cstring' instead [modernize-deprecated-headers]
#include <string.h>
         ^~~~~~~~~~
         <cstring>
/home/aref/projects/SGX-DDL/untrusted/enclave_u.h:11:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h> /* for size_t */
         ^~~~~~~~~~
         <cstdlib>
/home/aref/projects/SGX-DDL/untrusted/include/CryptoEngine.hpp:11:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/home/aref/projects/SGX-DDL/untrusted/include/CryptoEngine.hpp:12:10: warning: inclusion of deprecated C++ header 'stdio.h'; consider using 'cstdio' instead [modernize-deprecated-headers]
#include <stdio.h>
         ^~~~~~~~~
         <cstdio>
/home/aref/projects/SGX-DDL/untrusted/include/CryptoEngine.hpp:77:65: warning: use nullptr [modernize-use-nullptr]
  EVP_CIPHER_CTX_ctrl(e_ctx, EVP_CTRL_GCM_SET_IVLEN, iv.size(), NULL);
                                                                ^~~~~
                                                                nullptr
/home/aref/projects/SGX-DDL/untrusted/include/CryptoEngine.hpp:114:3: warning: use nullptr [modernize-use-nullptr]
  NULL);
  ^~~~~
  nullptr
/home/aref/projects/SGX-DDL/untrusted/include/app.h:3:10: warning: inclusion of deprecated C++ header 'assert.h'; consider using 'cassert' instead [modernize-deprecated-headers]
#include <assert.h>
         ^~~~~~~~~~
         <cassert>
/home/aref/projects/SGX-DDL/untrusted/include/app.h:4:10: warning: inclusion of deprecated C++ header 'stdio.h'; consider using 'cstdio' instead [modernize-deprecated-headers]
#include <stdio.h>
         ^~~~~~~~~
         <cstdio>
/home/aref/projects/SGX-DDL/untrusted/include/app.h:5:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/home/aref/projects/SGX-DDL/untrusted/include/app.h:6:10: warning: inclusion of deprecated C++ header 'stdarg.h'; consider using 'cstdarg' instead [modernize-deprecated-headers]
#include <stdarg.h>
         ^~~~~~~~~~
         <cstdarg>
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:2:10: warning: inclusion of deprecated C++ header 'assert.h'; consider using 'cassert' instead [modernize-deprecated-headers]
#include <assert.h>
         ^~~~~~~~~~
         <cassert>
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:7:10: warning: inclusion of deprecated C++ header 'stdio.h'; consider using 'cstdio' instead [modernize-deprecated-headers]
#include <stdio.h>
         ^~~~~~~~~
         <cstdio>
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:8:10: warning: inclusion of deprecated C++ header 'string.h'; consider using 'cstring' instead [modernize-deprecated-headers]
#include <string.h>
         ^~~~~~~~~~
         <cstring>
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:24:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_errlist_t {
^
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:32:58: warning: use nullptr [modernize-use-nullptr]
    {SGX_ERROR_UNEXPECTED, "Unexpected error occurred.", NULL},
                                                         ^~~~~
                                                         nullptr
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:33:57: warning: use nullptr [modernize-use-nullptr]
    {SGX_ERROR_INVALID_PARAMETER, "Invalid parameter.", NULL},
                                                        ^~~~~
                                                        nullptr
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:34:49: warning: use nullptr [modernize-use-nullptr]
    {SGX_ERROR_OUT_OF_MEMORY, "Out of memory.", NULL},
                                                ^~~~~
                                                nullptr
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:37:59: warning: use nullptr [modernize-use-nullptr]
    {SGX_ERROR_INVALID_ENCLAVE, "Invalid enclave image.", NULL},
                                                          ^~~~~
                                                          nullptr
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:38:71: warning: use nullptr [modernize-use-nullptr]
    {SGX_ERROR_INVALID_ENCLAVE_ID, "Invalid enclave identification.", NULL},
                                                                      ^~~~~
                                                                      nullptr
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:39:65: warning: use nullptr [modernize-use-nullptr]
    {SGX_ERROR_INVALID_SIGNATURE, "Invalid enclave signature.", NULL},
                                                                ^~~~~
                                                                nullptr
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:40:50: warning: use nullptr [modernize-use-nullptr]
    {SGX_ERROR_OUT_OF_EPC, "Out of EPC memory.", NULL},
                                                 ^~~~~
                                                 nullptr
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:44:63: warning: use nullptr [modernize-use-nullptr]
    {SGX_ERROR_MEMORY_MAP_CONFLICT, "Memory map conflicted.", NULL},
                                                              ^~~~~
                                                              nullptr
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:45:63: warning: use nullptr [modernize-use-nullptr]
    {SGX_ERROR_INVALID_METADATA, "Invalid enclave metadata.", NULL},
                                                              ^~~~~
                                                              nullptr
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:46:53: warning: use nullptr [modernize-use-nullptr]
    {SGX_ERROR_DEVICE_BUSY, "SGX device was busy.", NULL},
                                                    ^~~~~
                                                    nullptr
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:47:65: warning: use nullptr [modernize-use-nullptr]
    {SGX_ERROR_INVALID_VERSION, "Enclave version was invalid.", NULL},
                                                                ^~~~~
                                                                nullptr
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:48:66: warning: use nullptr [modernize-use-nullptr]
    {SGX_ERROR_INVALID_ATTRIBUTE, "Enclave was not authorized.", NULL},
                                                                 ^~~~~
                                                                 nullptr
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:49:65: warning: use nullptr [modernize-use-nullptr]
    {SGX_ERROR_ENCLAVE_FILE_ACCESS, "Can't open enclave file.", NULL},
                                                                ^~~~~
                                                                nullptr
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:53:6: warning: use nullptr [modernize-use-nullptr]
     NULL},
     ^~~~~
     nullptr
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:63:11: warning: use nullptr [modernize-use-nullptr]
      if (NULL != sgx_errlist[idx].sug)
          ^~~~
          nullptr
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:63:40: warning: statement should be inside braces [readability-braces-around-statements]
      if (NULL != sgx_errlist[idx].sug)
                                       ^
                                        {
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:70:18: warning: statement should be inside braces [readability-braces-around-statements]
  if (idx == ttl)
                 ^
                  {
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:77:24: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
int initialize_enclave(void) {
                       ^~~~~
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:85:41: warning: use nullptr [modernize-use-nullptr]
                           &global_eid, NULL);
                                        ^~~~~
                                        nullptr
/home/aref/projects/SGX-DDL/untrusted/src/app.cpp:112:20: warning: statement should be inside braces [readability-braces-around-statements]
  if (!f.is_open())
                   ^
                    {
/opt/intel/sgx-2.2/sgxsdk/include/sgx_attributes.h:35:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_attributes.h:53:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _attributes_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_attributes.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint32_t    sgx_misc_select_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_misc_select_t = uint32_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_attributes.h:62:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_misc_attribute_t {
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_defs.h:42:55: warning: macro replacement list should be enclosed in parentheses [misc-macro-parentheses]
# define SGX_CXX_NATIVE_HEADER(header)   <stdc++/linux/header>
                                         ~            ^
                                         (                    )
/opt/intel/sgx-2.2/sgxsdk/include/sgx_defs.h:42:56: warning: macro argument should be enclosed in parentheses [misc-macro-parentheses]
# define SGX_CXX_NATIVE_HEADER(header)   <stdc++/linux/header>
                                                       ^~~~~~~
                                                       ()
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:49:10: warning: inclusion of deprecated C++ header 'stddef.h'; consider using 'cstddef' instead [modernize-deprecated-headers]
#include <stddef.h>         /* for size_t */
         ^~~~~~~~~~
         <cstddef>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:90:31: warning: parameter 'eid' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ecall(const sgx_enclave_id_t eid,
                              ^~~~~~~~~~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:91:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                              const int index,
                              ^~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:94:42: warning: parameter 'eid' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ecall_switchless(const sgx_enclave_id_t eid,
                                         ^~~~~~~~~~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:95:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                              const int index,
                              ^~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:106:31: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ocall(const unsigned int index,
                              ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_edger8r.h:108:42: warning: parameter 'index' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_ocall_switchless(const unsigned int index,
                                         ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_eid.h:35:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_eid.h:37:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint64_t sgx_enclave_id_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_enclave_id_t = uint64_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_error.h:37:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef enum _status_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:42:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:59:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t                    sgx_key_128bit_t[16];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint16_t                   sgx_isv_svn_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_isv_svn_t = uint16_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:62:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_cpu_svn_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:67:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_key_id_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_key.h:74:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _key_request_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_quote.h:51:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_epid_group_id_t[4];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_quote.h:53:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _spid_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_quote.h:58:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _basename_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_quote.h:64:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _quote_nonce
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_quote.h:69:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef enum
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_quote.h:75:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _quote_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_quote.h:90:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _platform_info
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_quote.h:95:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _update_info_bit
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:49:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_measurement_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:54:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t             sgx_mac_t[SGX_MAC_SIZE];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:56:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_report_data_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:61:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint16_t            sgx_prod_id_t;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using sgx_prod_id_t = uint16_t
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:66:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _target_info_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:75:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _report_body_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_report.h:91:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _report_t                    /* 432 bytes */
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_uae_service.h:35:10: warning: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [modernize-deprecated-headers]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/opt/intel/sgx-2.2/sgxsdk/include/sgx_uae_service.h:53:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _sgx_ps_cap_t
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_urts.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef uint8_t sgx_launch_token_t[1024];
^
/opt/intel/sgx-2.2/sgxsdk/include/sgx_urts.h:70:40: warning: parameter 'debug' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                                       const int debug, 
                                       ^~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_urts.h:79:43: warning: parameter 'debug' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                                          const int debug, 
                                          ^~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_urts.h:84:43: warning: parameter 'ex_features' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                                          const uint32_t ex_features, 
                                          ^~~~~~~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_urts.h:90:25: warning: parameter 'debug' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
                        const int debug,
                        ^~~~~~~~~~
/opt/intel/sgx-2.2/sgxsdk/include/sgx_urts.h:97:41: warning: parameter 'enclave_id' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
sgx_status_t SGXAPI sgx_destroy_enclave(const sgx_enclave_id_t enclave_id);
                                        ^~~~~~~~~~~~~~~~~~~~~~~
Suppressed 13327 warnings (13327 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
