enclave {

    //include "../include/common.h"
    trusted {
              public void ecall_enclave_init(void); 
              public void ecall_assign_random_id([in,out, size=len] unsigned char* tr_records, size_t len); 
              public void ecall_initial_sort(); 
              public void ecall_check_for_sort_correctness();
              public void ecall_start_training();
    };
    untrusted {
              void ocall_load_net_config(
                     [in, size = path_len] const unsigned char* path,
                     size_t path_len,
                     [out, size = config_len] char* config,
                     size_t config_len,
                     [out] unsigned int* real_len,
                     [out, size = 12] unsigned char* config_iv,
                     [out, size = 16] unsigned char* config_mac);

              void ocall_print_string([in, string] const char *str);
              void ocall_get_record_sort(int i, [out, size=len_i] unsigned char* tr_record_i, size_t len_i,
                                         int j, [out, size=len_j] unsigned char* tr_record_j, size_t len_j); 
              void ocall_set_record_sort(int i, [in, size=len_i] unsigned char* tr_record_i, size_t len_i,
                                         int j, [in, size=len_j] unsigned char* tr_record_j, size_t len_j);
              void ocall_get_records(size_t i, [out, size=len_i] unsigned char* tr_record_i, size_t len_i); 
              void ocall_set_records(size_t i, [in, size=len_i] unsigned char* tr_record_i, size_t len_i);
              void ocall_set_timing([in, size=len] const char* time_id, size_t len , int is_it_first_call);
            };
};
