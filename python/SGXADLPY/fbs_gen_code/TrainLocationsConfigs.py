# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class TrainLocationsConfigs(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsTrainLocationsConfigs(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TrainLocationsConfigs()
        x.Init(buf, n + offset)
        return x

    # TrainLocationsConfigs
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TrainLocationsConfigs
    def DatasetDir(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TrainLocationsConfigs
    def DecDatasetDir(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TrainLocationsConfigs
    def NetworkArchPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TrainLocationsConfigs
    def WeightsSaveDir(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TrainLocationsConfigs
    def WeightsBackupDir(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TrainLocationsConfigs
    def SnapshotDir(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TrainLocationsConfigs
    def ClientPkSigFile(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TrainLocationsConfigs
    def SgxSkSigFile(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TrainLocationsConfigs
    def SgxPkSigFile(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TrainLocationsConfigs
    def SignedTaskConfigPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TrainLocationsConfigs
    def ClientAesGcmKeyFile(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TrainLocationsConfigs
    def SgxAesGcmKeyFile(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def TrainLocationsConfigsStart(builder): builder.StartObject(12)
def TrainLocationsConfigsAddDatasetDir(builder, datasetDir): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(datasetDir), 0)
def TrainLocationsConfigsAddDecDatasetDir(builder, decDatasetDir): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(decDatasetDir), 0)
def TrainLocationsConfigsAddNetworkArchPath(builder, networkArchPath): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(networkArchPath), 0)
def TrainLocationsConfigsAddWeightsSaveDir(builder, weightsSaveDir): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(weightsSaveDir), 0)
def TrainLocationsConfigsAddWeightsBackupDir(builder, weightsBackupDir): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(weightsBackupDir), 0)
def TrainLocationsConfigsAddSnapshotDir(builder, snapshotDir): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(snapshotDir), 0)
def TrainLocationsConfigsAddClientPkSigFile(builder, clientPkSigFile): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(clientPkSigFile), 0)
def TrainLocationsConfigsAddSgxSkSigFile(builder, sgxSkSigFile): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(sgxSkSigFile), 0)
def TrainLocationsConfigsAddSgxPkSigFile(builder, sgxPkSigFile): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(sgxPkSigFile), 0)
def TrainLocationsConfigsAddSignedTaskConfigPath(builder, signedTaskConfigPath): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(signedTaskConfigPath), 0)
def TrainLocationsConfigsAddClientAesGcmKeyFile(builder, clientAesGcmKeyFile): builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(clientAesGcmKeyFile), 0)
def TrainLocationsConfigsAddSgxAesGcmKeyFile(builder, sgxAesGcmKeyFile): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(sgxAesGcmKeyFile), 0)
def TrainLocationsConfigsEnd(builder): return builder.EndObject()
