# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class DataConfig(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsDataConfig(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DataConfig()
        x.Init(buf, n + offset)
        return x

    # DataConfig
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DataConfig
    def DatasetSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DataConfig
    def ImgLabelMeta(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .PlainImageLabelMeta import PlainImageLabelMeta
            obj = PlainImageLabelMeta()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DataConfig
    def DatasetSha256(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 1))
        return 0

    # DataConfig
    def DatasetSha256AsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint8Flags, o)
        return 0

    # DataConfig
    def DatasetSha256Length(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

def DataConfigStart(builder): builder.StartObject(3)
def DataConfigAddDatasetSize(builder, datasetSize): builder.PrependInt32Slot(0, datasetSize, 0)
def DataConfigAddImgLabelMeta(builder, imgLabelMeta): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(imgLabelMeta), 0)
def DataConfigAddDatasetSha256(builder, datasetSha256): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(datasetSha256), 0)
def DataConfigStartDatasetSha256Vector(builder, numElems): return builder.StartVector(1, numElems, 1)
def DataConfigEnd(builder): return builder.EndObject()
